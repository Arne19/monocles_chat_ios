# build a new stable release and push it to apple
name: stable.build-push

# Controls when the action will run.
on:
  # Triggers the workflow on push
  push:
    branches: [ stable ]

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildAndPublishStable:
    # The type of runner that the job will run on
    runs-on: self-hosted
    env:
      APP_NAME: "Monal"
      APP_DIR: "Monal.app"
      BUILD_TYPE: "AppStore"
      EXPORT_OPTIONS_CATALYST_APPSTORE: "../scripts/exportOptions/Stable_Catalyst_ExportOptions.plist"
      EXPORT_OPTIONS_CATALYST_APP_EXPORT: "../scripts/exportOptions/Beta_Catalyst_ExportOptions.plist"
      EXPORT_OPTIONS_IOS: "../scripts/exportOptions/Stable_iOS_ExportOptions.plist"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
        with:
          clean: true
          submodules: true
      - name: Fetch tags
        run: git fetch --tags
      - name: Checkout submodules
        run: git submodule update -f --init --remote
      - name: Get last build tag and increment it
        run: |
          oldBuildNumber=$(git tag --sort="v:refname" |grep "Build_iOS" | tail -n1 | sed 's/Build_iOS_//g')
          buildNumber=$(expr $oldBuildNumber + 1)
          echo "New buildNumber is $buildNumber"
          git tag Build_iOS_$buildNumber
      - name: Insert buildNumber into plists
        run: sh ./scripts/set_version_number.sh
      - name: Import TURN secrets
        run: |
          if [[ -e "/Users/ci/secrets.monal_stable" ]]; then
            echo "#import \"/Users/ci/secrets.monal_stable\"" > Monal/Classes/secrets.h
          fi
      - name: Make our build scripts executable
        run: chmod +x ./scripts/build.sh
      - run: chmod +x ./scripts/push_xmpp.org.sh
      - name: Run build
        run: ./scripts/build.sh
      - name: validate ios app
        run: xcrun altool --validate-app --file ./Monal/build/ipa/Monal.ipa --type ios -u $(cat /Users/ci/apple_connect_upload_mail.txt) -p "$(cat /Users/ci/apple_connect_upload_secret.txt)"
      - name: push tag to stable repo
        run: |
          buildNumber=$(git tag --sort="v:refname" |grep "Build_iOS" | tail -n1 | sed 's/Build_iOS_//g')
          git push origin Build_iOS_$buildNumber
      - name: Publish ios to appstore connect
        run: xcrun altool --upload-app --file ./Monal/build/ipa/Monal.ipa --type ios --asc-provider S8D843U34Y --team-id S8D843U34Y -u $(cat /Users/ci/apple_connect_upload_mail.txt) -p "$(cat /Users/ci/apple_connect_upload_secret.txt)"
      - name: Notarize catalyst
        run: xcrun notarytool submit ./Monal/build/app/Monal.zip --wait --team-id S8D843U34Y --key "/Users/ci/appstoreconnect/apiKey.p8" --key-id "$(cat /Users/ci/appstoreconnect/apiKeyId.txt)" --issuer "$(cat /Users/ci/appstoreconnect/apiIssuerId.txt)"
      - name: staple
        run: |
          cd Monal/build/app/tar_release/
          xcrun stapler staple "$APP_DIR"
          stapler validate "$APP_DIR"
          /usr/bin/ditto -c -k --sequesterRsrc --keepParent "$APP_DIR" "../$APP_NAME.zip"
          cd ../../../..
      - name: upload new catalyst stable to monal-im.org
        run: ./scripts/uploadNonAlpha.sh stable
      - name: Publish catalyst to appstore connect
        run: xcrun altool --upload-app --file ./Monal/build/app/Monal.pkg --type macos --asc-provider S8D843U34Y -u "$(cat /Users/ci/apple_connect_upload_mail.txt)" -p "$(cat /Users/ci/apple_connect_upload_secret.txt)" --primary-bundle-id maccatalyst.G7YU7X7KRJ.SworIM
      # - name: Update xmpp.org client list with new timestamp
      #   run: ./scripts/push_xmpp.org.sh
      - name: Extract version number and changelog from newest merge commit
        id: releasenotes
        run: |
          buildNumber=$(git tag --sort="v:refname" | grep "Build_iOS" | tail -n1 | sed 's/Build_iOS_//g')
          echo "tag=Build_iOS_$buildNumber" >> "$GITHUB_OUTPUT"
          echo "name=$(git log -n 1 --merges --pretty=format:%s | sed -E 's/^\s*([^\s]+)\s+\(([^\s]+)\)$/\1 (Build '$buildNumber', PR \2)/g')" >> "$GITHUB_OUTPUT"
          echo "notes=$(git log -n 1 --merges --pretty=format:%b)" >> "$GITHUB_OUTPUT"
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ steps.releasenotes.outputs.name }}"
          tag_name: "${{ steps.releasenotes.outputs.tag }}"
          target_commitish: stable
          generate_release_notes: false
          body: "${{ steps.releasenotes.outputs.notes }}"
          files: |
            ./Monal/build/ipa/Monal.ipa
            ./Monal/build/app/Monal.zip
          fail_on_unmatched_files: true
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
      - uses: actions/upload-artifact@v4
        with:
          name: monal-catalyst-pkg
          path: Monal/build/app/Monal.pkg
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: monal-ios
          path: Monal/build/ipa/Monal.ipa
          if-no-files-found: error
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: monal-catalyst-dsym
      #     path: Monal/build/macos_Monal.xcarchive/dSYMs
      #     if-no-files-found: error
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: monal-ios-dsym
      #     path: Monal/build/ios_Monal.xcarchive/dSYMs
      #     if-no-files-found: error
